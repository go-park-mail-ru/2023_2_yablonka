name: Pull Request CI

on:
  pull_request:
    branches:
      - master
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'
          cache: false
      
      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
  
  build:
    name: Binary build test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - name: Build .env file
        uses: ./.github/actions/build-dot-env
        with:
          jwt_secret: ${{ secrets.JWT_SECRET }}
          session_days: ${{ vars.SESSION_DURATION_DAYS }}
          session_hours: ${{ vars.SESSION_DURATION_HOURS }}
          session_minutes: ${{ vars.SESSION_DURATION_MINUTES }}
          session_seconds: ${{ vars.SESSION_DURATION_SECONDS }}
          session_id_length: ${{ vars.SESSION_ID_LENGTH }}

      - name: Build the binary
        run: go build -o yablonka-backend ./cmd/app/main.go
 
  test:
    name: Run tests
    needs: [lint, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache-dependency-path: 'go.sum'
      
      - name: Run Test
        run: |
          go test -v ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out
      
      - name: Go Coverage Badge  # Pass the `coverage.out` output to this action
        uses: tj-actions/coverage-badge-go@v2
        with:
          filename: coverage.out
      
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v12
        id: verify-changed-files
        with:
          files: README.md

      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge."

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}
