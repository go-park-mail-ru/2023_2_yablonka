name: Pull Request CI

on:
  pull_request:
    branches:
      - master
      - main

jobs:
  composite-ci:
    name: Lint, build, test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          cache: false
      
      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  
      - name: Build .env file
        uses: ./.github/actions/build-dot-env
        with:
          session_days: ${{ vars.SESSION_DURATION_DAYS }}
          session_hours: ${{ vars.SESSION_DURATION_HOURS }}
          session_minutes: ${{ vars.SESSION_DURATION_MINUTES }}
          session_seconds: ${{ vars.SESSION_DURATION_SECONDS }}
          session_id_length: ${{ vars.SESSION_ID_LENGTH }}
          migrator_pw: ${{ secrets.MIGRATOR_PASSWORD }}
          postgres_user: ${{ secrets.POSTGRES_USER }}
          postgres_pwd: ${{ secrets.POSTGRES_PASSWORD }}
          postgres_table: ${{ secrets.POSTGRES_TABLE }}
          postgres_host: ${{ secrets.POSTGRES_HOST }}
  
      - name: Build the binary
        run: go build -o yablonka-backend ./cmd/app/main.go
        
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      - name: Run Test
        run: |
          go test -v ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out

      - name: Go Coverage Badge  # Pass the `coverage.out` output to this action
        uses: tj-actions/coverage-badge-go@v2
        with:
          filename: coverage.out
        
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v12
        id: verify-changed-files
        with:
          files: README.md
  
      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge."

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}
          force: true

  swagger:
    name: Generate Swagger
    runs-on: ubuntu-latest
    needs: composite-ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
        
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          cache: false
          go-version-file: 'go.mod'

      - name: Install Swagger
        run: go install github.com/swaggo/swag/cmd/swag@latest

      - name: Generate Swagger docs
        run: |
          swag init -g cmd/app/main.go
      
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v12
        id: verify-changed-files
        with:
          files: |
            docs/*
  
      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -a -m "chore: Updated Swagger docs."

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}
          force: true

  deploy:
    name: Deploy to server
    needs: swagger
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with: 
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'placeholder'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Connect via SSH
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}

      - name: Deploy
        run: |
          ${{ secrets.AUTH_COMMAND }}
          cd ${{ secrets.REPO_PATH }}
          git switch ${{ github.head_ref }} && git pull
          docker-compose up --build --detach
      
      - name: Check docker stati
        run: |
          running_containers="$(docker ps --filter 'status=running')"
          all_containers="$(docker ps -a)"
          if [ "$running_containers != $all_containers" ]; then gh run cancel ${{ github.run_id }} && gh run watch ${{ github.run_id }}; fi
