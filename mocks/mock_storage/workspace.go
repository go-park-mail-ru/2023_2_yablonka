// Code generated by MockGen. DO NOT EDIT.
// Source: P:\VK Образование\Web\Sem_2\Project\2023_2_yablonka\internal\storage\workspace.go
//
// Generated by this command:
//
//	mockgen.exe --source=P:\VK Образование\Web\Sem_2\Project\2023_2_yablonka\internal\storage\workspace.go --destination=./mocks/mock_storage/workspace.go --package=mock_storage
//
// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	context "context"
	reflect "reflect"
	dto "server/internal/pkg/dto"
	entities "server/internal/pkg/entities"

	gomock "go.uber.org/mock/gomock"
)

// MockIWorkspaceStorage is a mock of IWorkspaceStorage interface.
type MockIWorkspaceStorage struct {
	ctrl     *gomock.Controller
	recorder *MockIWorkspaceStorageMockRecorder
}

// MockIWorkspaceStorageMockRecorder is the mock recorder for MockIWorkspaceStorage.
type MockIWorkspaceStorageMockRecorder struct {
	mock *MockIWorkspaceStorage
}

// NewMockIWorkspaceStorage creates a new mock instance.
func NewMockIWorkspaceStorage(ctrl *gomock.Controller) *MockIWorkspaceStorage {
	mock := &MockIWorkspaceStorage{ctrl: ctrl}
	mock.recorder = &MockIWorkspaceStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWorkspaceStorage) EXPECT() *MockIWorkspaceStorageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIWorkspaceStorage) Create(arg0 context.Context, arg1 dto.NewWorkspaceInfo) (*entities.Workspace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*entities.Workspace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIWorkspaceStorageMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIWorkspaceStorage)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockIWorkspaceStorage) Delete(arg0 context.Context, arg1 dto.WorkspaceID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIWorkspaceStorageMockRecorder) Delete(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIWorkspaceStorage)(nil).Delete), arg0, arg1)
}

// GetUserGuestWorkspaces mocks base method.
func (m *MockIWorkspaceStorage) GetUserGuestWorkspaces(arg0 context.Context, arg1 dto.UserID) (*[]dto.UserGuestWorkspaceInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserGuestWorkspaces", arg0, arg1)
	ret0, _ := ret[0].(*[]dto.UserGuestWorkspaceInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserGuestWorkspaces indicates an expected call of GetUserGuestWorkspaces.
func (mr *MockIWorkspaceStorageMockRecorder) GetUserGuestWorkspaces(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserGuestWorkspaces", reflect.TypeOf((*MockIWorkspaceStorage)(nil).GetUserGuestWorkspaces), arg0, arg1)
}

// GetUserOwnedWorkspaces mocks base method.
func (m *MockIWorkspaceStorage) GetUserOwnedWorkspaces(arg0 context.Context, arg1 dto.UserID) (*[]dto.UserOwnedWorkspaceInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserOwnedWorkspaces", arg0, arg1)
	ret0, _ := ret[0].(*[]dto.UserOwnedWorkspaceInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserOwnedWorkspaces indicates an expected call of GetUserOwnedWorkspaces.
func (mr *MockIWorkspaceStorageMockRecorder) GetUserOwnedWorkspaces(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserOwnedWorkspaces", reflect.TypeOf((*MockIWorkspaceStorage)(nil).GetUserOwnedWorkspaces), arg0, arg1)
}

// UpdateData mocks base method.
func (m *MockIWorkspaceStorage) UpdateData(arg0 context.Context, arg1 dto.UpdatedWorkspaceInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateData", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateData indicates an expected call of UpdateData.
func (mr *MockIWorkspaceStorageMockRecorder) UpdateData(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateData", reflect.TypeOf((*MockIWorkspaceStorage)(nil).UpdateData), arg0, arg1)
}
