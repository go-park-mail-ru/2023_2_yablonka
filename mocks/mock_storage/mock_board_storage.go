// Code generated by MockGen. DO NOT EDIT.
// Source: P:\VK Образование\Web\Sem_2\Project\2023_2_yablonka\internal\storage\board.go
//
// Generated by this command:
//
//	mockgen.exe --source=P:\VK Образование\Web\Sem_2\Project\2023_2_yablonka\internal\storage\board.go --destination=./mocks/mock_storage/mock_board_storage.go --package=mock_storage
//
// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	context "context"
	reflect "reflect"
	dto "server/internal/pkg/dto"
	entities "server/internal/pkg/entities"

	gomock "go.uber.org/mock/gomock"
)

// MockIBoardStorage is a mock of IBoardStorage interface.
type MockIBoardStorage struct {
	ctrl     *gomock.Controller
	recorder *MockIBoardStorageMockRecorder
}

// MockIBoardStorageMockRecorder is the mock recorder for MockIBoardStorage.
type MockIBoardStorageMockRecorder struct {
	mock *MockIBoardStorage
}

// NewMockIBoardStorage creates a new mock instance.
func NewMockIBoardStorage(ctrl *gomock.Controller) *MockIBoardStorage {
	mock := &MockIBoardStorage{ctrl: ctrl}
	mock.recorder = &MockIBoardStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBoardStorage) EXPECT() *MockIBoardStorageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIBoardStorage) Create(arg0 context.Context, arg1 dto.NewBoardInfo) (*entities.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*entities.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIBoardStorageMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIBoardStorage)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockIBoardStorage) Delete(arg0 context.Context, arg1 dto.BoardID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIBoardStorageMockRecorder) Delete(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIBoardStorage)(nil).Delete), arg0, arg1)
}

// GetById mocks base method.
func (m *MockIBoardStorage) GetById(arg0 context.Context, arg1 dto.BoardID) (*entities.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", arg0, arg1)
	ret0, _ := ret[0].(*entities.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockIBoardStorageMockRecorder) GetById(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockIBoardStorage)(nil).GetById), arg0, arg1)
}

// GetUserGuestBoards mocks base method.
func (m *MockIBoardStorage) GetUserGuestBoards(arg0 context.Context, arg1 dto.UserID) (*[]entities.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserGuestBoards", arg0, arg1)
	ret0, _ := ret[0].(*[]entities.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserGuestBoards indicates an expected call of GetUserGuestBoards.
func (mr *MockIBoardStorageMockRecorder) GetUserGuestBoards(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserGuestBoards", reflect.TypeOf((*MockIBoardStorage)(nil).GetUserGuestBoards), arg0, arg1)
}

// GetUserOwnedBoards mocks base method.
func (m *MockIBoardStorage) GetUserOwnedBoards(arg0 context.Context, arg1 dto.UserID) (*[]entities.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserOwnedBoards", arg0, arg1)
	ret0, _ := ret[0].(*[]entities.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserOwnedBoards indicates an expected call of GetUserOwnedBoards.
func (mr *MockIBoardStorageMockRecorder) GetUserOwnedBoards(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserOwnedBoards", reflect.TypeOf((*MockIBoardStorage)(nil).GetUserOwnedBoards), arg0, arg1)
}

// Update mocks base method.
func (m *MockIBoardStorage) Update(arg0 context.Context, arg1 dto.IndividualBoardInfo) (*entities.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*entities.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockIBoardStorageMockRecorder) Update(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIBoardStorage)(nil).Update), arg0, arg1)
}
