// Code generated by MockGen. DO NOT EDIT.
// Source: P:\VK Образование\Web\Sem_2\Project\2023_2_yablonka\internal\storage\csrf.go
//
// Generated by this command:
//
//	mockgen.exe --source=P:\VK Образование\Web\Sem_2\Project\2023_2_yablonka\internal\storage\csrf.go --destination=./mocks/mock_storage/csrf.go --package=mock_storage
//
// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	context "context"
	reflect "reflect"
	dto "server/internal/pkg/dto"
	entities "server/internal/pkg/entities"

	gomock "go.uber.org/mock/gomock"
)

// MockICSRFStorage is a mock of ICSRFStorage interface.
type MockICSRFStorage struct {
	ctrl     *gomock.Controller
	recorder *MockICSRFStorageMockRecorder
}

// MockICSRFStorageMockRecorder is the mock recorder for MockICSRFStorage.
type MockICSRFStorageMockRecorder struct {
	mock *MockICSRFStorage
}

// NewMockICSRFStorage creates a new mock instance.
func NewMockICSRFStorage(ctrl *gomock.Controller) *MockICSRFStorage {
	mock := &MockICSRFStorage{ctrl: ctrl}
	mock.recorder = &MockICSRFStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICSRFStorage) EXPECT() *MockICSRFStorageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockICSRFStorage) Create(arg0 context.Context, arg1 *entities.CSRF) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockICSRFStorageMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockICSRFStorage)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockICSRFStorage) Delete(arg0 context.Context, arg1 dto.CSRFToken) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockICSRFStorageMockRecorder) Delete(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockICSRFStorage)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockICSRFStorage) Get(arg0 context.Context, arg1 dto.CSRFToken) (*entities.CSRF, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*entities.CSRF)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockICSRFStorageMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockICSRFStorage)(nil).Get), arg0, arg1)
}
