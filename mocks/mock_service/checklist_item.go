// Code generated by MockGen. DO NOT EDIT.
// Source: P:\VK Образование\Web\Sem_2\Project\2023_2_yablonka\internal\service\checklist_item.go
//
// Generated by this command:
//
//	mockgen.exe --source=P:\VK Образование\Web\Sem_2\Project\2023_2_yablonka\internal\service\checklist_item.go --destination=./mocks/mock_service/checklist_item.go --package=mock_service
//
// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"
	dto "server/internal/pkg/dto"

	gomock "go.uber.org/mock/gomock"
)

// MockIChecklistItemService is a mock of IChecklistItemService interface.
type MockIChecklistItemService struct {
	ctrl     *gomock.Controller
	recorder *MockIChecklistItemServiceMockRecorder
}

// MockIChecklistItemServiceMockRecorder is the mock recorder for MockIChecklistItemService.
type MockIChecklistItemServiceMockRecorder struct {
	mock *MockIChecklistItemService
}

// NewMockIChecklistItemService creates a new mock instance.
func NewMockIChecklistItemService(ctrl *gomock.Controller) *MockIChecklistItemService {
	mock := &MockIChecklistItemService{ctrl: ctrl}
	mock.recorder = &MockIChecklistItemServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIChecklistItemService) EXPECT() *MockIChecklistItemServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIChecklistItemService) Create(arg0 context.Context, arg1 dto.NewChecklistItemInfo) (*dto.ChecklistItemInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*dto.ChecklistItemInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIChecklistItemServiceMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIChecklistItemService)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockIChecklistItemService) Delete(arg0 context.Context, arg1 dto.ChecklistItemID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIChecklistItemServiceMockRecorder) Delete(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIChecklistItemService)(nil).Delete), arg0, arg1)
}

// Update mocks base method.
func (m *MockIChecklistItemService) Update(arg0 context.Context, arg1 dto.UpdatedChecklistItemInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockIChecklistItemServiceMockRecorder) Update(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIChecklistItemService)(nil).Update), arg0, arg1)
}

// UpdateOrder mocks base method.
func (m *MockIChecklistItemService) UpdateOrder(arg0 context.Context, arg1 dto.ChecklistItemIDs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrder", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateOrder indicates an expected call of UpdateOrder.
func (mr *MockIChecklistItemServiceMockRecorder) UpdateOrder(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrder", reflect.TypeOf((*MockIChecklistItemService)(nil).UpdateOrder), arg0, arg1)
}
