// Code generated by MockGen. DO NOT EDIT.
// Source: checklist.go
//
// Generated by this command:
//
//	mockgen -source=checklist.go -destination=../../mocks/mock_service/checklist.go -package=mock_service
//
// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"
	dto "server/internal/pkg/dto"

	gomock "go.uber.org/mock/gomock"
)

// MockIChecklistService is a mock of IChecklistService interface.
type MockIChecklistService struct {
	ctrl     *gomock.Controller
	recorder *MockIChecklistServiceMockRecorder
}

// MockIChecklistServiceMockRecorder is the mock recorder for MockIChecklistService.
type MockIChecklistServiceMockRecorder struct {
	mock *MockIChecklistService
}

// NewMockIChecklistService creates a new mock instance.
func NewMockIChecklistService(ctrl *gomock.Controller) *MockIChecklistService {
	mock := &MockIChecklistService{ctrl: ctrl}
	mock.recorder = &MockIChecklistServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIChecklistService) EXPECT() *MockIChecklistServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIChecklistService) Create(arg0 context.Context, arg1 dto.NewChecklistInfo) (*dto.ChecklistInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*dto.ChecklistInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIChecklistServiceMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIChecklistService)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockIChecklistService) Delete(arg0 context.Context, arg1 dto.ChecklistID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIChecklistServiceMockRecorder) Delete(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIChecklistService)(nil).Delete), arg0, arg1)
}

// Update mocks base method.
func (m *MockIChecklistService) Update(arg0 context.Context, arg1 dto.UpdatedChecklistInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockIChecklistServiceMockRecorder) Update(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIChecklistService)(nil).Update), arg0, arg1)
}
