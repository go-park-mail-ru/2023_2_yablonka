basePath: /api/v2
definitions:
  apperrors.ErrorResponse:
    properties:
      error_response:
        type: string
    type: object
  doc_structs.UserBoardsResponse:
    properties:
      boards:
        items:
          $ref: '#/definitions/entities.Board'
        type: array
      user:
        $ref: '#/definitions/entities.User'
    type: object
  doc_structs.UserResponse:
    properties:
      user:
        $ref: '#/definitions/entities.User'
    type: object
  dto.AuthInfo:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.UserInfo:
    properties:
      email:
        type: string
      id:
        type: integer
    type: object
  entities.Board:
    properties:
      board_id:
        type: integer
      guests:
        items:
          $ref: '#/definitions/dto.UserInfo'
        type: array
      name:
        type: string
      owner:
        $ref: '#/definitions/dto.UserInfo'
      thumbnail_url:
        type: string
    type: object
  entities.User:
    properties:
      email:
        type: string
      name:
        type: string
      surname:
        type: string
      thumbnail_url:
        type: string
      user_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: kdanil01@mail.ru
    name: Капитанов Даниил
    url: https://vk.com/poophead27
  description: Лучшее и единственно приложение, имитирующее Trello.
  license:
    name: None
    url: None
  title: LA TABULA API
  version: "2.0"
paths:
  /api/v2/user/boards/:
    get:
      consumes:
      - application/json
      description: Выводит и созданные им доски и те, в которых он гость. Работает
        только для авторизированного пользователя.
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь и его доски
          schema:
            $ref: '#/definitions/doc_structs.UserBoardsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
      summary: Вывести все доски текущего пользователя
      tags:
      - boards
  /auth/login/:
    post:
      consumes:
      - application/json
      description: Для этого использует сессии
      parameters:
      - description: Эл. почта и логин пользователя
        in: body
        name: authData
        required: true
        schema:
          $ref: '#/definitions/dto.AuthInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Объект пользователя
          schema:
            $ref: '#/definitions/doc_structs.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
      summary: Войти в систему
      tags:
      - auth
  /auth/logout/:
    delete:
      consumes:
      - application/json
      description: Удаляет текущую сессию пользователя. Может сделать только авторизированный
        пользователь. Текущая сессия определяется по cookie "tabula_user", в которой
        лежит строка-токен.
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
      summary: Выйти из системы
      tags:
      - auth
  /auth/signup/:
    post:
      consumes:
      - application/json
      description: Также вводит пользователя в систему
      parameters:
      - description: Эл. почта и логин пользователя
        in: body
        name: authData
        required: true
        schema:
          $ref: '#/definitions/dto.AuthInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Объект пользователя
          schema:
            $ref: '#/definitions/doc_structs.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
      summary: Зарегистрировать нового пользователя
      tags:
      - auth
  /auth/verify:
    get:
      consumes:
      - application/json
      description: Узнать существует ли сессия текущего пользователя. Сессия определяется
        по cookie "tabula_user", в которой лежит строка-токен.
      produces:
      - application/json
      responses:
        "200":
          description: Объект пользователя
          schema:
            $ref: '#/definitions/doc_structs.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperrors.ErrorResponse'
      summary: Подтвердить вход
      tags:
      - auth
swagger: "2.0"
